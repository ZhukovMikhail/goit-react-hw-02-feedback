{"version":3,"sources":["Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js","Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styles","stats","title","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","name","onClick","App","state","data","percentageOfGood","hendleFeedback","e","currentTarget","console","log","setState","prev","hendleTotalValue","onPercentageOfGood","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6SA8BeA,MA1Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OAAc,IAAVD,EAEA,sBAAKE,UAAWC,IAAOC,MAAvB,UACE,oBAAIF,UAAWC,IAAOE,MAAtB,yBACA,sCACO,+BAAOR,OAEd,yCACU,+BAAOC,OAEjB,qCACM,+BAAOC,OAEb,uCACQ,+BAAOC,OAEf,mDACoB,iCAAOC,EAAP,aAKjB,oBAAIC,UAAWC,IAAOE,MAAtB,iC,gBCTIC,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLT,UAAWC,IAAOS,OAElBC,KAAMH,EACNI,QAASN,EALX,SAOGE,GAJIA,OCJLK,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPkB,KAAO,CACLjB,MAAO,EACPkB,iBAAkB,G,EAGpBC,eAAiB,SAAAC,GACf,IAAQP,EAASO,EAAEC,cAAXR,KACRS,QAAQC,IAAIV,GACZ,EAAKW,UAAS,SAAAC,GAAI,sBAAQZ,EAAOY,EAAKZ,GAAQ,MAC9C,EAAKa,mBACL,EAAKC,sB,EAGPD,iBAAmB,SAAAN,GAAC,OAAK,EAAKH,KAAKjB,OAAS,G,EAE5C2B,mBAAqB,SAAAP,GACnB,EAAKH,KAAKC,iBAAmBU,KAAKC,MACc,KAA7C,EAAKb,MAAMnB,KAAO,EAAKoB,KAAKjB,MAAQ,Q,4CAIzC,WACE,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,wCACA,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBsB,KAAKX,mBAG1B,cAAC,EAAD,CACEtB,KAAMiC,KAAKd,MAAMnB,KACjBC,QAASgC,KAAKd,MAAMlB,QACpBC,IAAK+B,KAAKd,MAAMjB,IAEhBC,MAAO8B,KAAKb,KAAKjB,MAEjBC,mBAAoB6B,KAAKb,KAAKC,0B,GA5CtBa,aAmDHhB,ICnDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,kBCA5DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ac1e8983.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  if (total !== 0) {\r\n    return (\r\n      <div className={styles.stats}>\r\n        <h2 className={styles.title}>Statistics:</h2>\r\n        <p>\r\n          Good:<span>{good}</span>\r\n        </p>\r\n        <p>\r\n          Neutral:<span>{neutral}</span>\r\n        </p>\r\n        <p>\r\n          Bad:<span>{bad}</span>\r\n        </p>\r\n        <p>\r\n          Total:<span>{total}</span>\r\n        </p>\r\n        <p>\r\n          positive feedback:<span>{positivePercentage}%</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h2 className={styles.title}> No feedback given</h2>;\r\n  }\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  stats: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      className={styles.button}\r\n      key={option}\r\n      name={option}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.string,\r\n  onLeaveFeedback: PropTypes.func,\r\n  button: PropTypes.string,\r\n};\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Statistics from './Components/Statistics/Statistics';\r\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions.jsx';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  data = {\r\n    total: 0,\r\n    percentageOfGood: 0,\r\n  };\r\n\r\n  hendleFeedback = e => {\r\n    const { name } = e.currentTarget;\r\n    console.log(name);\r\n    this.setState(prev => ({ [name]: prev[name] + 1 }));\r\n    this.hendleTotalValue();\r\n    this.onPercentageOfGood();\r\n  };\r\n\r\n  hendleTotalValue = e => (this.data.total += 1);\r\n\r\n  onPercentageOfGood = e => {\r\n    this.data.percentageOfGood = Math.floor(\r\n      (this.state.good / this.data.total + 0.001) * 100,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"section\">\r\n        <h2 className=\"title\">Please leave your feedback</h2>\r\n        <div className=\"btn\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.hendleFeedback}\r\n          />\r\n        </div>\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          // total={this.state.total}\r\n          total={this.data.total}\r\n          // positivePercentage={this.state.percentageOfGood}\r\n          positivePercentage={this.data.percentageOfGood}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n// hendleGoodbtn = e => {\r\n//   this.setState(prev => ({ good: prev.good + 1 }));\r\n//   this.hendleTotalValue();\r\n//   this.onPercentageOfGood();\r\n// };\r\n// hendleNeutralbtn = e => {\r\n//   this.setState(prev => ({ neutral: prev.neutral + 1 }));\r\n//   this.hendleTotalValue();\r\n//   this.onPercentageOfGood();\r\n// };\r\n// hendleBadbtn = e => {\r\n//   this.setState(prev => ({ bad: prev.bad + 1 }));\r\n//   this.hendleTotalValue();\r\n//   this.onPercentageOfGood();\r\n// };\r\n\r\n/* <button type=\"button\" onClick={this.hendleGoodbtn}>\r\n  Good\r\n</button>\r\n<button type=\"button\" onClick={this.hendleNeutralbtn}>\r\n  Neutral\r\n</button>\r\n<button type=\"button\" onClick={this.hendleBadbtn}>\r\n  Bad\r\n</button> */\r\n\r\n/* <div>Statistics:</div>\r\n<p>Good:{this.state.good}</p>\r\n<p>Neutral:{this.state.neutral}</p>\r\n<p>Bad:{this.state.bad}</p>\r\n<p>Total:{this.state.total}</p>\r\n<p>positive feedback:{this.state.percentageOfGood}%</p> */\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1IpSy\",\"stats\":\"Statistics_stats__3n5TN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3_bX7\"};"],"sourceRoot":""}