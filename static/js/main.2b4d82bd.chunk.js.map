{"version":3,"sources":["Components/Statistics/Statistics.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js","Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styles","stats","title","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","name","onClick","App","state","compValue","Object","keys","data","percentageOfcompValue","hendleFeedback","e","currentTarget","console","log","setState","prev","hendleTotalValue","onpercentageOfcompValue","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6SA8BeA,MA1Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OAAc,IAAVD,EAEA,sBAAKE,UAAWC,IAAOC,MAAvB,UACE,oBAAIF,UAAWC,IAAOE,MAAtB,yBACA,sCACO,+BAAOR,OAEd,yCACU,+BAAOC,OAEjB,qCACM,+BAAOC,OAEb,uCACQ,+BAAOC,OAEf,mDACoB,iCAAOC,EAAP,aAKjB,oBAAIC,UAAWC,IAAOE,MAAtB,iC,gBCTIC,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLT,UAAWC,IAAOS,OAElBC,KAAMH,EACNI,QAASN,EALX,SAOGE,GAJIA,OCJLK,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPkB,UAAYC,OAAOC,KAAK,EAAKH,OAAO,G,EACpCI,KAAO,CACLH,UAAW,EACXjB,MAAO,EACPqB,sBAAuB,G,EAGzBC,eAAiB,SAAAC,GACf,IAAQV,EAASU,EAAEC,cAAXX,KACRY,QAAQC,IAAIb,GACZ,EAAKc,UAAS,SAAAC,GAAI,sBAAQf,EAAOe,EAAKf,GAAQ,MAC1CA,IAAS,EAAKI,YAChB,EAAKG,KAAKH,WAAa,GAEzB,EAAKY,mBACL,EAAKC,2B,EAGPD,iBAAmB,SAAAN,GAAC,OAAK,EAAKH,KAAKpB,OAAS,G,EAE5C8B,wBAA0B,SAAAP,GACxB,EAAKH,KAAKC,sBAAwBU,KAAKC,MACpC,EAAKZ,KAAKH,UAAY,EAAKG,KAAKpB,MAAS,KAE5CyB,QAAQC,IAAI,OAAQ,CAACR,OAAOC,KAAK,EAAKH,OAAO,KAC7CS,QAAQC,IAAI,QAAS,EAAKN,KAAKpB,OAC/ByB,QAAQC,IAAI,wBAAyB,EAAKN,KAAKC,wB,4CAGjD,WACE,OACE,sBAAKnB,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,wCACA,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CACEK,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiByB,KAAKX,mBAG1B,cAAC,EAAD,CACEzB,KAAMoC,KAAKjB,MAAMnB,KACjBC,QAASmC,KAAKjB,MAAMlB,QACpBC,IAAKkC,KAAKjB,MAAMjB,IAChBC,MAAOiC,KAAKb,KAAKpB,MACjBC,mBAAoBgC,KAAKb,KAAKC,+B,GAlDtBa,aAyDHnB,ICzDfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,MAAQ,4B,kBCA5DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.2b4d82bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  if (total !== 0) {\r\n    return (\r\n      <div className={styles.stats}>\r\n        <h2 className={styles.title}>Statistics:</h2>\r\n        <p>\r\n          Good:<span>{good}</span>\r\n        </p>\r\n        <p>\r\n          Neutral:<span>{neutral}</span>\r\n        </p>\r\n        <p>\r\n          Bad:<span>{bad}</span>\r\n        </p>\r\n        <p>\r\n          Total:<span>{total}</span>\r\n        </p>\r\n        <p>\r\n          positive feedback:<span>{positivePercentage}%</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <h2 className={styles.title}> No feedback given</h2>;\r\n  }\r\n}\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  stats: PropTypes.string,\r\n  title: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      className={styles.button}\r\n      key={option}\r\n      name={option}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.string,\r\n  onLeaveFeedback: PropTypes.func,\r\n  button: PropTypes.string,\r\n};\r\n","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport Statistics from './Components/Statistics/Statistics';\r\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions.jsx';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  compValue = Object.keys(this.state)[0];\r\n  data = {\r\n    compValue: 0,\r\n    total: 0,\r\n    percentageOfcompValue: 0,\r\n  };\r\n\r\n  hendleFeedback = e => {\r\n    const { name } = e.currentTarget;\r\n    console.log(name);\r\n    this.setState(prev => ({ [name]: prev[name] + 1 }));\r\n    if (name === this.compValue) {\r\n      this.data.compValue += 1;\r\n    }\r\n    this.hendleTotalValue();\r\n    this.onpercentageOfcompValue();\r\n  };\r\n\r\n  hendleTotalValue = e => (this.data.total += 1);\r\n\r\n  onpercentageOfcompValue = e => {\r\n    this.data.percentageOfcompValue = Math.floor(\r\n      (this.data.compValue / this.data.total) * 100,\r\n    );\r\n    console.log('good', [Object.keys(this.state)[0]]);\r\n    console.log('total', this.data.total);\r\n    console.log('percentageOfcompValue', this.data.percentageOfcompValue);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"section\">\r\n        <h2 className=\"title\">Please leave your feedback</h2>\r\n        <div className=\"btn\">\r\n          <FeedbackOptions\r\n            options={['good', 'neutral', 'bad']}\r\n            onLeaveFeedback={this.hendleFeedback}\r\n          />\r\n        </div>\r\n        <Statistics\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          total={this.data.total}\r\n          positivePercentage={this.data.percentageOfcompValue}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__1IpSy\",\"stats\":\"Statistics_stats__3n5TN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3_bX7\"};"],"sourceRoot":""}